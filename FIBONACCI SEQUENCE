TEST CASE 1:
public class FIBONACCISEQUENCE {
	public static int fibonacci(int n)
	{
   if (n <= 1) {
	   return n;
   }
   return fibonacci(n-1) + fibonacci(n-2);
	}
	public static void main(String[] args) {
		int n = 5;
		System.out.println("Fibonacci sequence up to " + n + " term:");
		for (int i = 0; i < n; i++) {
			System.out.println(fibonacci(i) + " ");
		}
}
}
OUTPUT:
Fibonacci sequence up to 5 term:0 1 1 2 3

TEST CASE 2:
public class FIBONACCISEQUENCE {
	public static int fibonacci(int n)
	{
   if (n <= 1) {
	   return n;
   }
   return fibonacci(n-1) + fibonacci(n-2);
	}
	public static void main(String[] args) {
		int n = 7;
		System.out.println("Fibonacci sequence up to " + n + " term:");
		for (int i = 0; i < n; i++) {
			System.out.println(fibonacci(i) + " ");
		}
}
}
OUTPUT:
Fibonacci sequence up to 7 term:0 1 1 2 3 5 8

TEST CASE 3:
public class FIBONACCISEQUENCE {
	public static int fibonacci(int n)
	{
   if (n <= 1) {
	   return n;
   }
   return fibonacci(n-1) + fibonacci(n-2);
	}
	public static void main(String[] args) {
		int n = 1;
		System.out.println("Fibonacci sequence up to " + n + " term:");
		for (int i = 0; i < n; i++) {
			System.out.println(fibonacci(i) + " ");
		}
}
}
OUTPUT:
Fibonacci sequence up to 1 term:0 

TEST CASE 4:
public class FIBONACCISEQUENCE {
	public static int fibonacci(int n)
	{
   if (n <= 1) {
	   return n;
   }
   return fibonacci(n-1) + fibonacci(n-2);
	}
	public static void main(String[] args) {
		int n = 0;
		System.out.println("Fibonacci sequence up to " + n + " term:");
		for (int i = 0; i < n; i++) {
			System.out.println(fibonacci(i) + " ");
		}
}
}
OUTPUT:
Fibonacci sequence up to 0 term:

TEST CASE 5:
public class FIBONACCISEQUENCE {
	public static int fibonacci(int n)
	{
   if (n <= 1) {
	   return n;
   }
   return fibonacci(n-1) + fibonacci(n-2);
	}
	public static void main(String[] args) {
		int n = 10;
		System.out.println("Fibonacci sequence up to " + n + " term:");
		for (int i = 0; i < n; i++) {
			System.out.println(fibonacci(i) + " ");
		}
}
}
OUTPUT:
Fibonacci sequence up to 10 term:0 1 1 2 3 5 8 13 21 34

RESULT:
Prints Fibonacci sequence correctly up to n terms
